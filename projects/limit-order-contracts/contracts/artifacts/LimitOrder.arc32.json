{
  "hints": {
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "createOrder(txn,pay,uint64,uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "claimOrder(uint64,txn)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "claimOwnerAsset(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "optInToAsset(uint64,pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "cancelOrder(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "orderIndex": {
          "type": "uint64",
          "key": "orderIndex"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 1
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "LimitOrder",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createOrder",
        "args": [
          {
            "name": "assetSendTxn",
            "type": "txn"
          },
          {
            "name": "mbrTxn",
            "type": "pay"
          },
          {
            "name": "takingAsset",
            "type": "uint64"
          },
          {
            "name": "takingAmount",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "claimOrder",
        "args": [
          {
            "name": "orderId",
            "type": "uint64"
          },
          {
            "name": "assetSendTxn",
            "type": "txn"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "claimOwnerAsset",
        "args": [
          {
            "name": "orderId",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optInToAsset",
        "args": [
          {
            "name": "assetId",
            "type": "uint64"
          },
          {
            "name": "mbrTxn",
            "type": "pay"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "cancelOrder",
        "args": [
          {
            "name": "orderId",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}